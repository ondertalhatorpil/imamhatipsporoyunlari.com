version: '3.8'

services:
  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:80"  # Reverse proxy için erişim portu
    depends_on:
      - backend
    networks:
      - app-network

  # Backend (Node.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8561:8561"  # Backend API portu
    volumes:
      - ./backend/public:/app/public
    depends_on:
      - mysql
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=
      - DB_NAME=spor_galeri
    networks:
      - app-network

  # MySQL Veritabanı
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_DATABASE=spor_galeri
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network

  # PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    ports:
      - "8068:80"  # PhpMyAdmin için erişim portu
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=
    depends_on:
      - mysql
    networks:
      - app-network
      
networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: